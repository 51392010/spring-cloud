<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.xin.jump</groupId>
    <artifactId>sring-cloud</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>spring-cloud</name>

    <!-- 项目部署至私服 -->
    <!--<distributionManagement>
        &lt;!&ndash; 部署项目产生的构件到远程仓库需要的信息 &ndash;&gt;
        <repository>
            <id>releases</id>
            <name>Nexus Release Repository</name>
            <url>http://127.0.0.1:8081/nexus/content/repositories/releases/</url>
        </repository>
        &lt;!&ndash; 如果没有配置该元素，默认部署到repository元素配置的仓库 &ndash;&gt;
        <snapshotRepository>
            <id>snapshots</id>
            <name>Nexus Snapshot Repository</name>
            <url>http://127.0.0.1:8081/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>-->

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.9.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <lombok.version>1.18.2</lombok.version>
        <spring-cloud-netflix-eureka-server.version>1.4.5.RELEASE</spring-cloud-netflix-eureka-server.version>
    </properties>

    <modules>
        <!-- 注册中心 -->
        <module>microservice-discovery-eureka</module>
        <module>microservice-discovery-eureka-ha</module>
        <module>microservice-discovery-eureka-authenticating</module>
        <!-- Ribbon -->
        <module>microservice-consumer-movie-without-eureka</module>

        <!-- API接口提供方 -->
        <module>microservice-provider-user</module>
        <module>microservice-provider-user-authenticating</module>
        <module>microservice-provider-user-my-metadata</module>
        <module>microservice-provider-user-ip</module>
        <module>microservice-provider-user-with-auth</module>
        <module>microservice-provider-user-multiple-params</module>

        <!-- API服务调用方 -->
        <module>microservice-consumer-movie</module>
        <module>microservice-consumer-movie-understanding-metadata</module>
        <module>microservice-consumer-movie-ribbon</module>
        <module>microservice-consumer-movie-ribbon-customizing</module>
        <module>microservice-consumer-movie-ribbon-customizing-properties</module>
        <module>microservice-consumer-movie-feign</module>
        <module>microservice-consumer-movie-feign-customizing</module>
        <module>microservice-consumer-movie-feign-manual</module>
        <module>microservice-consumer-movie-feign-logging</module>
        <module>microservice-consumer-movie-feign-multiple-params</module>
        <module>microservice-consumer-movie-feign-multiple-params</module>
        <module>microservice-consumer-movie-ribbon-hystrix</module>
        <module>microservice-consumer-movie-feign-hystrix-fallback</module>
    </modules>

    <dependencies>
        <!-- add Lombok 依赖 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>
    </dependencies>

    <!-- 引入spring cloud的依赖 -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Edgware.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
        <finalName>spring-cloud</finalName>
    </build>
</project>